{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>PRELIMINARY (COMMENTS WELCOME)</p> <p>Welcome to the documentation of the CMS Particle Flow Algorithm.   The aim of this page is to provide a centralized overview of the CMS Particle Flow algorithm with the main focus being on:</p> <ul> <li>Particle Flow Block algorithm</li> <li>Core Particle Flow algorithm</li> </ul> <p>This page is mostly based on the 2017 CMS paper \"Particle-flow reconstruction and global event description with the CMS detector\" [1].</p> <p>Link to the Particle Flow algorithm in CMSSW.</p>"},{"location":"#what-is-particle-flow","title":"What is Particle Flow?","text":"<p>The Particle Flow (PF) algorithm is used to reconstruct and identify all particles produced in CMS individually by combining information from all subdetectors.  These particles include:</p> <ul> <li>Muons</li> <li>Electrons</li> <li>Photons</li> <li>Neutral hadrons</li> <li>Charged hadrons</li> </ul>"},{"location":"#how-do-particles-traverse-through-the-cms-detector","title":"How do particles traverse through the CMS detector?","text":"<p>Starting from the interaction point, particles will traverse outwards, passing through the following subsystems:</p> <ul> <li>Inner tracker</li> <li>Electromagnetic calorimeter (ECAL)</li> <li>Hadronic calorimeter (HCAL)</li> <li>Solenoid</li> <li>Muon system</li> </ul> <p>The central feature of the  CMS detector is a large superconducting solenoid magnet with a field of currently 3.8 T. Due to the strong magnetic field, the trajectories of charged particles traversing the detector are bent, allowing for a precise momentum and charge measurement by reconstructing their path using the inner tracking detectors. Neutral particles however are identified and measured by their energy deposits in the two calorimeters. Both the inner tracking system as well as the two calorimeters are physically located inside the solenoid, with the muons systems placed in and around an iron return yoke constraining the magnetic field outside the solendoid. A transverse slice of the CMS detector can be seen in Figure 1, showing how different particles interact with the detector elements and travel through the detector. A detailed description of the CMS detector with all of its subdetectors can be found in [2]. A short summary of the particle interactions in the detector elements is given below. </p> <p> </p> Figure 1. Schematic of the specific particle interactions in a transverse slice of the CMS detector [2] <ol> <li>From the interaction point outwards, particles first enter the inner tracking system, where charged particle trajectories (tracks) and origins (vertices) are reconstructed from hits in the layers of the CMS tracking system. The tracks are bent due to the magnetic field, which enables the measurement of charged particle momentum and electric charge.</li> <li>From the inner tracking system, particles enter the ECAL, where depending on the particle type they start showering and losing energy, which can be reconstructed as clusters. Electrons and photons are fully absorbed in the ECAL, charged and neutral hadrons lose some but usually not all of their energy and move on the the HCAL together with the muons, which as minimum ionizing particles (MIP) only lose small amounts of energy in the calorimeters.</li> <li>Charged and neutral hadrons continue showering in the HCAL, where they lose most if not all of their energy and get fully absorbed. Hadrons with enough energy can penetrate the outer boundaries of the HCAL and are stopped in the iron yoke surrounding the solenoid.</li> <li>Finally, muons leave tracks in the muon system allowing for their identification and futher constraints on their momentum.</li> </ol>"},{"location":"#offline-and-high-level-trigger-reconstruction","title":"Offline and High Level Trigger reconstruction","text":"<p>The CMS detector has a two level trigger system comprising of:</p> <ul> <li>The L1 Trigger</li> <li>The High Level Trigger (HLT)</li> </ul> <p>The L1 trigger takes information from the calorimeters and the muon detectors in order to select interesting events in a fixed time interval of less than 4 \\(\\mu\\)s. It is designed to reduce the initial bunch crossing rate of 40 MHz to 100 kHz. If an event is accepted by the L1 trigger, the full detector information is read out and sent to the HLT, which further decreases the event rate from 100 kHz to only about 1-3 kHz before data storage for later offline reconstruction. The HLT software runs on a CPU+GPU farm. For optimal performance, the Particle Flow algorithm is run in a simplified mode, which provides physics objects with better resolution compared to traditional reconstruction methods. The reconstruction at the HLT is needed in order to make sure which events are of interest and should be stored for further analysis.</p> <p>High Level Trigger reconstruction is called \"online\" reconstruction, while \"offline\" reconstruction is the basic Particle Flow reconstruction that is done afterwards. The online reconstruction of a single event at the HLT has to be done within 140 ms on average, which is about 100 times faster than the offline reconstruction, in order to cope with the incoming event rate. This is also why the reconstruction at the HLT needs to be simplified. </p> <p>Looking at the offline reconstruction, most of the processing time is spent on reconstructing the inner tracks for the PF algorithm (iterative tracking, explained in the \"What are PF elements?\" section). At the HLT, tracking runs a single global iteration [3], compared to the 10 tracking iterations in the offline reconstruction. </p> <p>After the track reconstruction, a specific instance of the particle identification and reconstruction algorithm runs online. Compared to the offline algorithm two minor differences arise:</p> <ol> <li>Electron identification and reconstruction is not integrated in the online algorithm</li> <li>The reconstruction of nuclear interactions in the tracker is not performed</li> </ol> <p>These differences result in a slightly higher jet energy scale (JES) for jets including electrons or nuclear interactions.</p>"},{"location":"#code-organization-overview","title":"Code organization overview","text":"<p>The physics-based overview of the Particle Flow reconstruction and identification algorithm can be seen in Figure 2, where a short description is given about the logic of the algorithm as a flowchart, starting from the particle collisions in CMS and ending with the creation of the PF candidates.</p> <p> </p> Figure 2. Physics-based overview of the Particle Flow algorithm  <p>The basic code-based overview of the algorithm is shown in Figure 3.</p> <ul> <li>The algorithm starts with PF element reconstruction (tracks and clusters), which is done by the clustering algorithm and track reconstruction algorithms, taking the recorded hits in the inner tracker and both calorimeters as input. </li> <li>Next, the PF elements are sorted into blocks by the PFBlock algorithm (PF elements are linked together and groups of linked elements are made into PF blocks).</li> <li>PF candidates are built from the PF blocks by the core PF algorithm. The blocks are processed in a specific manner by particle type. First, muons are created, then electrons and isolated photons, and finally charged hadrons, neutral hadrons and nonisolated photons. All particles reconstructed by the PF algorithm are called PF candidates.</li> </ul> <p> Figure 3. Basic code-based overview of the Particle Flow algorithm  </p>"},{"location":"#further-reference","title":"Further Reference","text":"<ul> <li>PF Twiki page</li> <li>Twiki page for PFBlockAlgo</li> <li>Particle Flow Reconstruction \"under the hood\" by Michalis Bachtis (2016) - A presentation giving a good overview of the PF algorithm.</li> </ul>"},{"location":"#references","title":"References","text":"<ul> <li>[1]  The CMS Collaboration, 2017, \"Particle-flow reconstruction and global event description with the CMS detector\"</li> <li>[2]  The CMS Collaboration, 2008, \"The CMS experiment at the CERN LHC\"</li> <li>[3]  Juliette Alimena (DESY), 2023, \"The CMS Trigger System for Run 3\"</li> </ul>"},{"location":"corepf/","title":"Core Particle Flow algorithm","text":"<p>PRELIMINARY (COMMENTS WELCOME)</p>"},{"location":"corepf/#overview-of-the-core-pf-algorithm","title":"Overview of the core PF algorithm","text":"<p>After the formation of PF blocks, particle candidates are separated out by the core PF algorithm. The resulting list of \u201cparticle flow candidates\u201d becomes the input to any event interpretation algorithm in CMS.</p> <p>In each PF block the identification and reconstruction sequence proceeds as so:</p> <ol> <li>Muon candidates are identified and reconstructed and the corresponding PF elements are removed from the PF block. </li> <li>Electron identification and reconstruction with the aim of collecting the energy of all bremsstrahlung photons. Energetic and isolated photons, both converted and unconverted, are also identified here. Corresponding tracks and ECAL or preshower clusters are removed from further consideration.</li> <li>The remaining elements in the PF block are then subject to a cross-identification of charged hadrons, neutral hadrons, and photons, arising from parton fragmentation, hadronization, and decays in jets.</li> <li>Nuclear interactions coming from hadrons create secondary particles. These hadrons are identified and reconstructed.</li> <li>When the global event description becomes available, meaning when all blocks have been processed and all particles identified, the reconstructed event is revisited by a post-processing step.</li> </ol> <p>So in conclusion particles are dealt with in this order: muons, electrons, hadrons, photons, nuclear interactions. When one of them is processed, the corresponding tracks-clusters-links are removed from further consideration.</p> <p>The flowchart below gives an overview of the core PFAlgo, and the code for the core PFAlgo can be found here.</p> <p></p>"},{"location":"corepf/#identification-and-reconstruction-of-pf-candidates","title":"Identification and reconstruction of PF candidates","text":"<p>This section is based on \"Particle-flow reconstruction and global event description with the CMS detector\" by the CMS collaboration released in 2017.</p> <p>All particles reconstructed by the PF algorithm are called PF candidates. The sections that follow describe the identification and reconstruction of the different types of PF candidates, which are also used to build hadronically decaying taus (\\(\\tau_{h}\\)), jets, and determine the missing transverse energy (MET), in the order that they are processed by the PF algorithm.</p>"},{"location":"corepf/#muons","title":"Muons","text":"<p>Since muons are electrically charged particles, they leave tracks in the inner tracking system of CMS. They have little or no interactions with both the ECAL and HCAL, but they do interact with the CMS muon system, consisting of drift tube (DT) chambers, cathode strip chambers (CSC), and resistive plate chambers (RPC). </p> <p>The muon system grants a high efficiency for muon identification over the full detector acceptance. A high purity is achieved, due to the ECAL and HCAL absorbing the other particles except neutrinos. The momentum of muons is precisely measured by the inner tracker. The final collection of muon physics objects comprises of 3 types:</p> <ul> <li>Standalone muon  Hits within each DT or CSC detector are clustered to form track segments. These track segments are used as seeds for the pattern recognition in the muon system, which aims to gather all DT, CSC, RPC hits along the muon trajectory. The result of the final fitting is called a standalone muon track.</li> <li>Global muon  Each standalone-muon track is matched to a track in the inner tracker (inner track), if the parameters of the corresponding tracks propagated onto a common surface are compatible. The hits from the two tracks are combined and fit to form a global muon track. </li> <li>Tracker muon  Inner tracks with \\(p_T&gt;0.5\\) GeV and total momentum \\(p&gt;2.5\\) GeV are extrapolated to the muon system. If at least 1 track segment matches the extrapolated track, the inner track passes as a tracker muon track. The track to segment matching is done in a local coordinate system \\((x,y)\\) that is defined in a plane transverse to the beam axis, where \\(x\\) is the better measured coordinate. The track and segment are matched if the absolute value of the difference between their positions in the x coordinate \\(|\\Delta x|&lt;3\\) cm or if the ratio of this distance to its uncertainty (pull) is smaller than 4.</li> </ul> <p>The identification of muons in the PF algorithm goes by a set of selections based on the global and tracker muon properties, and is done by the PFMuonAlgo.</p> <ol> <li>Isolated global muons are selected by considering additional inner tracks and calorimeter energy deposits with a distance \\(\\Delta R\\) to the muon direction in the \\((\\eta,\\phi)\\) plane smaller than 0.3. The sum of the \\(p_{T}\\) of the tracks and of the \\(E_{T}\\) of the deposits is required not to exceed 10% of the muon \\(p_{T}\\). This isolation criteria is enough to reject hadrons that would be misidentified as muons. No further selection is applied to these candidates.</li> <li>More strict identification criteria is needed for muons inside jets. The PF algorithm will tend to create additional fake neutral particles from calorimeter deposits in the case of charged hadrons being misidentified as muons. Unidentified muons will be considered to be charged hadrons, and will absorb the energy deposits of nearby neutral particles. For nonisolated global muons, the tight-muon selection is applied. It is required also that at least 3 matching track segments are found in the muon detectors, or that the calorimeter deposits associated with the track are compatible with the muon hypothesis (The calorimetric energy of the clusters is significantly smaller than the sum of the charged track momenta). This selection removes most of the high \\(p_{T}\\) hadrons misidentified as muons, as well as accidental associations of tracker and standalone muon tracks.</li> <li> <p>Muons failing tigh-muon selection because of:</p> <ul> <li>Poorly reconstructed inner tracks. For example hit confusion with other nearby tracks. These are salvaged if the standalone muon track fit is of high enough quality and associated with a large number of hits in the detectors (23/32 hits in the DT, 15/24 hits in the CSC).</li> <li>Poor global fit. If a high quality fit is obtained with at least 13 hits in the tracker, the muon is selected, if the associated calorimeter clusters are compatible with the muon hypothesis.</li> </ul> </li> <li> <p>The momentum of the muon is chosen to be that of the inner track if its \\(p_{T} &lt; 200\\) GeV. Above this value, the momentum is chosen according to the smallest \\(\\chi^{2}\\) probability from the different track fits: tracker only, tracker and first muon detector plane, global, global without the muon detector planes featuring a high occupancy.</p> </li> <li>The PF elements making up these identified muons are masked against further processing in the corresponding PF block, which means they are not used as building elements for other particles. However, at this point muon identification and reconstruction is not complete yet! In the reconstruction of hadrons, charged hadron candidates are checked for compatibility of the measurements of their momenta in the tracker and energies in calorimeters. If the track momenta is significally higher than the calibrated sum of the linked calorimeter clusters, the muon identification criteria is revisited with looser selections on the fit quality and on the hit or segment associations. Basically everything is done with looser selection criteria.</li> </ol> <p>To read more about muon reconstruction, click here.</p>"},{"location":"corepf/#electrons","title":"Electrons","text":"<p>This section will focus on the reconstruction of electrons and also mention how isolated photons are reconstructed. The section is mostly based on the original 2017 PF paper and the CMS paper \"Electron and photon reconstruction and identification with the CMS experiment at the CERN LHC\" found here. The reconstruction is based on the information from both the inner tracker and the calorimeters and starts with the energy reconstruction algorithm that forms clusters of crystals in the ECAL. Crystals with recorded energies above a predefined treshold (80 MeV in EB and 300 MeV in EE) are grouped together - this is known as \"clustering\". Next, a seed cluster is defined, chosen to be the one containing most of the energy deposited in any specific region, with a minimum transverse energy above 1 GeV. To read more about the clustering algorithm used in the PF framework click here.</p> <p>ECAL clusters within a certain geometric area around the seed cluster are combined into superclusters (SC). The name of this procedure is \"superclustering\". The multiple ECAL clusters need to be combined into a single SC that captures the energy of the original electron/photon. This is due to electrons and photons having a significant probability of showering when traversing the CMS tracker - by the time the particle reaches the ECAL, the original object may consist of several electrons and/or photons produced from bremsstrahlung and/or pair production.</p> <p>In order to include radiative losses from bremsstrahlung an algorithm known as the GSF (Gaussian Sum Filter) tracking algorithm is used. The GSF algorithm is too CPU intensive to run on reconstructed hits in the tracker so it is applied on electron tracks instead. The reconstruction of the electron tracks begins with the identification of a hit pattern that may lie on an electron trajectory, this is known as \"seeding\". The electron track seeds can be either ECAL-driven or tracker-driven. Both approaches are shortly described below:</p> <ul> <li> <p>ECAL-driven</p> <p>The ECAL driven seeding first selects SCs with transverse energy \\(E_{T}\\) bigger than 4 GeV. The SC is compared in \\(\\phi\\) and \\(z-\\)coordinate with a collection of track seeds, formed by combining multiple hits in the inner tracker (triplets or doublets). The SCs are extrapolated to the collision vertex, and If the first two hits of a tracker seed are matched to the predicted trajectory for a SC under any charge hypothesis, it is selected for seeding a GSF track.</p> </li> <li> <p>Tracker-driven</p> <p>The tracker driven seeding has an efficiency of about 50% for electrons from Z decay with \\(p_T\\) of about 3 GeV and drops to less than 5% for \\(p_T\\) bigger than 10GeV. The tracker-driven approach iterates over all generic tracks, which are tracks with \\(p_T\\) above 2 GeV that are reconstructed from hits in the tracker through an iterative algorithm known as the Kalman filter (KF). If any of these KF tracks is compatible with an ECAL cluster, its track seed is used to seed a GSF track. Since it is computationally expensive to reconstruct all tracks in an event, tracker-driven seeding is performed only in the offline reconstruction and not in HLT.</p> </li> </ul> <p></p> <p>If an ECAL-driven seed shares all but one of its hits with a tracker-driven seed, the resulting track candidate is considered as both ECAL- and tracker-seeded. This is also the case for ECAL-driven seeds, which share all hits with a tracker-driven seed, but in this case the tracker-driven seed is discarded before the track-finding step. The majority of electrons fall into one of these two cases.</p> <p>The final collection of selected electron seeds is obtained by combining the ECAL-driven and tracker-driven seeds. It is used to initiate the reconstruction of electron tracks. For a given seed, the track parameters evaluated at each successive tracker layer are used by the iterative KF algorithm to build the electron trajectory. Once the track candidates are reconstructed by the KF algorithm, their parameters are estimated at each layer with a GSF fit in which the energy loss is approximated by an admixture of Gaussian distributions - we have obtained GSF tracks.</p> <p>During the 3 steps above, all tracks that are reconstructed in the event, are tested for compatibility with an electron track hypothesis. If successful, they are also used to seed the GSF tracking step.</p> <p>A dedicated algorithm is used to find generic tracks that are likely to originate from photons converting into electron-positron pairs.</p> <p>So far we have the following PF elements:</p> <ul> <li>ECAL clusters<ul> <li>Superclusters</li> <li>Clusters associated with conversion-flagged tracks</li> </ul> </li> <li>Tracks <ul> <li>GSF tracks</li> <li>Generic tracks associated with electrons</li> <li>Conversion-flagged tracks</li> </ul> </li> </ul> <p>These PF elements are imported into the PFBlock algorithm, where they are linked together into blocks. The blocks are used by the PFEgammaAlgo, where they are resolved into electron and photon objects aka e/\u03b3 objects, starting from a GSF track or a SC respectively. An e/\u03b3 object must always start from either a SC or a GSF track. At this point no differentiation between electron and photon candidates is made. The final list of linked ECAL clusters for each candidate is promoted to a refined supercluster from where e/\u03b3 objects are built based on loose selection requirements. Objects that pass the selection with an associated GSF track are labelled electrons, and the ones without GSF tracks are labelled as photons (isolated), since photons are neutrally charged and don't leave tracks in the tracker.</p> <p>This collection is known as the unbiased e/\u03b3 collection and is used as a starting point by the vast majority of analyses involving electrons and photons.</p> <p>Separation of electrons and photons from hadrons is done by applying a tighter selection to the e/\u03b3 objects to decide if they're accepted as an electron or an isolated photon. If an e/\u03b3 objects passes both the electron and photon selection criteria, then its type will be determined by whether it has a GSF track with a hit in the first layer of the pixel detector or not. If it fails both selection criterias then its basic elements, those being the generic tracks and ECAL clusters, are further considered to form neutral hadrons, charged hadrons or nonisolated photons in the PF framework, meaning they go back into the PF block. </p> <p>As usual, all tracks and clusters in the PF block used to reconstruct electrons and photons are removed from further processing. Tracks identified as originating from photon conversion but not used in the reconstruction process are masked as well, as they are usually poorly measured and likely to be misreconstructed tracks. The distinction between electrons and photons in the PF global event description can be different from a selection optimized for a specialized analysis. To combat this, the complete history of the electron and photon reconstruction is tracked and saved, to allow a different event interpretation to be made without running the whole PF algorithm again.</p> <p>To read more about the principles of electron reconstruction, click here.</p>"},{"location":"corepf/#photons","title":"Photons","text":"<p>Photons can be divided into two categories:</p> <ul> <li>Isolated photons - Reconstruction is done at the same time as electron reconstruction.</li> <li>Non-isolated photons - Reconstruction is done at the same time as hadron reconstruction.</li> </ul> <p>For the reconstruction of isolated photons read the section on electron reconstruction, since it follows mostly the same steps with some minor differences explained in the section.</p> <p>For the reconstruction of non-isolated photons read the section on hadron reconstruction. </p>"},{"location":"corepf/#hadrons","title":"Hadrons","text":"<p>The PF algorithm can identify and reconstruct:</p> <ul> <li>Charged hadrons</li> <li>Neutral hadrons</li> </ul> <p>ECAL and HCAL clusters not linked to any track give rise to photons (non-isolated) and neutral hadrons. Clusters separated from the extrapolated position of any charged particle track in the calorimeters hint for a clear signature of neutral particles. Let's look at two scenarios:</p> <ol> <li>Within the tracker acceptance |\\(\\eta\\)| &lt; 2.5, all these ECAL clusters are turned into photons and HCAL clusters into neutral hadrons. But why do all these clusters in the ECAL get turned into photons? The justification is given by the observation that in hadronic jets, 25% of the jet energy is carried by photons, while neutral hadrons leave only 3% of their energy in the ECAL. This means that the energy deposits making up the ECAL clusters are mainly from photons and the HCAL clusters from neutral hadrons. Do keep in mind that we are dealing with ECAL and HCAL clusters that are not linked to any track.</li> <li>Beyond the tracker acceptance |\\(\\eta\\)| &gt; 2.5, charged and neutral hadrons cannot be distinguished and they leave in total 25% of the jet energy in the ECAL, meaning that the ECAL energy priority given to photons is no longer justified! Because of this, ECAL clusters linked to a given HCAL cluster are assumed to arise from the same hadron shower (be it charged or neutral), while ECAL clusters without such a link are classified as photons.</li> </ol> <p></p> <p>The remaining HCAL clusters of the PF block are linked to one or several available tracks and these tracks may be linked to some of the remaining ECAL clusters.  Since hadrons deposit energy in both the ECAL and the HCAL, both cluster energies need to be recalibrated to get an estimate of the true hadron energy (the ECAL is calibrated for photons and has a different response to hadrons). No attempt is made to calibrate the hadrons leaving energy only in the ECAL, as such clusters are identified as photon or electron clusters by the PF algorithm. The calibrated calorimetric energy is determined from the energy of the HCAL cluster and the total energy of the ECAL clusters, under the single charged-hadron hypothesis. The sum of the track momenta is then compared to the calibrated calorimetric energy in order to determine particle content.</p> <ol> <li> <p>If the calibrated calorimetric energy is in excess of the sum of the track momenta by an amount larger than the expected calorimetric energy resolution for hadrons, the excess may be interpreted as the presence of photons and neutral hadrons. Specifically, if the excess is smaller than the total ECAL energy and larger than 500 MeV, the excess is identified as a photon with an energy corresponding to this excess after recalibration under the photon hypothesis. Otherwise, the recalibrated ECAL energy still gives rise to a photon, and the remaining part of the excess, if larger than 1 GeV, is identified as a neutral hadron. Each track gives rise to a charged hadron, the momentum and energy are taken directly from the corresponding track momentum, under the charged-pion mass hypothesis.</p> </li> <li> <p>If the calibrated calorimetric energy is compatible with the sum of the track momenta, no neutral particle is identified. The charged-hadron momenta are redefined by a \\(\\chi^{2}\\) fit of the measurements in the tracker and the calorimeters, which reduces to a weighted average if only one track is linked to the HCAL cluster. When track parameters are measured with degraded resolutions, meaning at very high energies or at large pseudorapidity, this turns out very important. It guarantees a smooth transition between the low energy regime, dominated by tracker measurements, and the high energy regime, dominated by calorimetric measurements. The energy resolution resulting from this is always better than that of the calorimetric energy measurement, even at highest energies.</p> </li> <li> <p>When the calibrated calorimetric energy is significantly smaller than the sum of the track momenta (rare cases) by 3 standard deviations, a relaxed search for muons is performed (muons deposit very little energy in the calorimeters). </p> </li> </ol>"},{"location":"corepf/#example","title":"Example","text":"<p>Depicted in the figure below, are three plots describing an event display of an illustrative jet that is made out of five particles. The upper plot is in the \\((x,y)\\) view with a transverse perspective of the entire event, while the lower two plots are in the \\((\\eta,\\phi)\\) view, presenting an overview of the event on the ECAL surface (lower left) and the HCAL surface (lower right).</p> <p>The event is interpreted by the PF algorithm as follows:</p> <p></p> <ul> <li>Three ECAL clusters \\(E_{2}\\), \\(E_{3}\\), \\(E_{4}\\) are within tracker acceptance, and thus no link with any HCAL cluster is created. The three ECAL clusters are not linked to any charged particle track either, so the three corresponding PF blocks give rise to one photon each: 3 blocks \\(\\rightarrow\\) 3 photons. The first 2 photons come from the decay of a generated \\(\\pi^{0}\\) (ECAL clusters \\(E_{2}\\) and \\(E_{3}\\)) and the third photon comes from the energy (\\(E_{4}\\)) deposited in the ECAL by the generated \\(K^{0}_{L}\\), which is therefore misidentified as a photon.</li> <li>The fourth PF block consists of two tracks \\(T_{1}\\) and \\(T_{2}\\), the ECAL cluster \\(E_{1}\\), and two HCAL clusters \\(H_{1}\\) and \\(H_{2}\\). Only the track (\\(T_{1}\\)) link closest to the HCAL cluster \\(H_{1}\\) is kept, and similarly only the link of \\(T_{2}\\) to \\(H_{2}\\) is kept. The clusters \\(H_{1}\\) and \\(E_{1}\\) with the track \\(T_{1}\\) give rise to a charged hadron (\\(\\pi^{-}\\)), the direction of which is that of \\(T_{1}\\). The calibrated calorimetric energy is obtained under the charged hadron hypothesis, from the raw energies of both \\(E_{1}\\) and \\(H_{1}\\), with an estimate of the true hadron energy given by the momentum of the track \\(T_{1}\\). The calibrated energy is found to be compatible with the momentum of \\(T_{1}\\), so no neutral particles are identified and the charged hadron energy is obtained from the weighted average of the track momentum and the calibrated calorimetric energy. The same thing applies to the cluster \\(H_{2}\\) and the track \\(T_{2}\\), which give rise to a second charged hadron (\\(\\pi^{+}\\)).</li> </ul>"},{"location":"corepf/#nuclear-interactions-in-the-tracker-material","title":"Nuclear interactions in the tracker material","text":"<p>A hadron interaction in the tracker material often leads to the creation of a number of charged and neutral secondary particles originating from a secondary vertex. These particles are reconstructed as charged particles (mostly charged hadrons but also muons and electrons), photons, and neutral hadrons by the PF algorithm like usual (whether the secondary vertex is identified or not). When the nuclear interaction vertex (secondary vertex) is identified, the secondary charged particle tracks are linked together, and the secondary charged particles are replaced in the reconstructed particle list by a single primary charged hadron. Its direction comes from the vectorial sum of the momenta of its constituents, its energy is obtained from the sum of their energies, and its mass is set to the charged pion mass. If there is an unused incoming track included in the secondary vertex, then the direction of the primary charged hadron is taken to be that of the incoming track. Furthermore, if, the momentum of the incoming track is well measured, it is used for estimating the energy of secondary particles that were undetected, meaning that they weren't  reconstructed at all (neither as secondary charged particles nor as neutral particles).</p>"},{"location":"corepf/#event-post-processing","title":"Event post-processing","text":"<p>It is impossible to identify and reconstruct all particles perfectly. In general, misreconstructed particles, tend to average out and do not have a large impact on the evaluation of global event quantities, such as jets and MET. In rare cases an artificially large missing transverse momentum \\(p_{T}^{miss}\\), is reconstructed in the event. This is most often caused by a misidentified or misreconstructed high \\(p_T\\) muon, and leads the event to be wrongly selected by a large set of new physics searches, therefore it needs to be understood and corrected. </p>"},{"location":"pfblock/","title":"Particle Flow Block algorithm","text":"<p>PRELIMINARY (COMMENTS WELCOME)</p>"},{"location":"pfblock/#what-are-pf-elements","title":"What are PF elements?","text":"<p>PF elements are the basic inputs for the PFBlock algorithm. They can be divided into:</p> <ul> <li>Charged particle tracks from the inner tracker</li> <li>ECAL clusters</li> <li>HCAL clusters</li> <li>Muon tracks</li> </ul> <p>The reconstruction of PF elements is done by specifically set up advanced algorithms and is the first step in PF particle reconstruction. The algorithms include:</p> <ul> <li>The reconstruction of charged particle tracks and vertices in the inner tracker using iterative tracking</li> <li>Electron and muon track reconstruction</li> <li>The reconstruction and calibration of calorimeter clusters</li> </ul> <p>A short description of the reconstruction of the PF elements from the last two bullet points can be found in the \"Identification and reconstruction of PF candidates\" section, where they are tied in with the reconstruction of the corresponding particles. Do keep in mind that electron tracks are still charged particle tracks that are built using the information from the inner tracker. </p>"},{"location":"pfblock/#charged-particle-tracks-and-vertices","title":"Charged particle tracks and vertices","text":"<p>Charged-particle track reconstruction was originally aimed at measuring the momentum of energetic and isolated muons, identifying energetic and isolated hadronic \\(\\tau\\) decays, and at tagging b-jets, meaning it was mainly aimed at energetic particles and limited to only well-measured tracks. The tracks are reconstructed by a combinatorial track finder and are further required to satisfy certain conditions, such as a minimum number of required hits along a track\u2019s trajectory. </p> <p>In the case of hadrons, complications arise, such as loss in tracking efficiency and increase in the misreconstruction rate. Charged hadrons that are missed by the tracker will be detected by the calorimeters (if detected at all) as neutral hadrons with reduced efficiency, largely degraded energy resolution, and biased direction due to the bending of its trajectory in the magnetic field. Two thirds of the jet energy in a jet is on average carried by charged hadrons, so a 20% tracking inefficiency would double the energy fraction of identified neutral hadrons in a jet from 10% to over 20%. This would degrade the jet energy and angular resolutions by about 50%. Therefore it is critical for PF event reconstruction to increase the track reconstruction efficiency while at the same time keep the misreconstruction rate unchanged. This is done by applying the combinatorial track finder in several successive iterations, labelled as iterative tracking. During each step, the reduction of the misreconstruction rate is done by applying a number of quality criteria on the track seeds, on the track fit \\(\\chi^{2}\\), and on the track compatibility. The hits associated with the tracks that are selected are removed from further processing in the next iteration. The hits that remain are then used in the next iteration to form new seeds and tracks with relaxed quality criteria, which then increases the total tracking efficiency without degrading the purity. This is then repeated several times with progressively more complex and time-consuming seeding, filtering, and tracking algorithms. To read more about iterative tracking and charged-particle tracks and vertices, read chapter 3 of the original PF paper.</p>"},{"location":"pfblock/#overview-of-the-pfblock-algorithm","title":"Overview of the PFBlock algorithm","text":""},{"location":"pfblock/#link-algorithm","title":"Link algorithm","text":"<p>The Link algorithm is the next step in particle reconstruction following the creation of PF elements, and is the first step in the PFBlock algorithm. It aims to connect the PF elements from different subdetectors, since a single particle gives rise to many PF elements in the various CMS subdetectors. For example a muon leaves tracks in the tracker and hits in the muon detectors.</p> <p>PF blocks consist of PF elements associated either by a direct link or indirect link through common elements. The link algorithm takes pairs of PF elements in an event and tests them. If two elements are linked, the algorithm will define a distance between them, quantifying the quality of the link. </p> <p>In conclusion, the Link algorithm connects together PF elements (tracks and clusters) based on their spatial proximity. Links can be formed between:</p> <ul> <li>Tracks and ECAL clusters/HCAL clusters</li> <li>ECAL clusters and HCAL clusters</li> <li>Inner tracks and Muon tracks</li> <li>Muon tracks and ECAL clusters/HCAL clusters</li> </ul>"},{"location":"pfblock/#physics-based-overview","title":"Physics based overview","text":"<p>After all links are established between the compatible PF elements, PF blocks are formed from groups of linked PF elements. Blocks are also built from PF elements that were not linked to other PF elements, such as single tracks or single clusters. The overall logic of the PFBlock algorithm can be seen in the flowchart below.</p> <p> Figure 1. Physics-based overview of the Particle Flow Block algorithm  </p>"},{"location":"pfblock/#code-organization-overview","title":"Code organization overview","text":"<p>The code for the PFBlock algorithm can be found here.</p> <p></p> <p>The input for the PFBlock algorithm is a set of PF elements and the output is a collection of PFBlocks.</p> <p>First linkers (used to link the elements) and importer plugins (used to import the inputs) are specified (setImporters and setLinkers). All importers are run and a global list of PFBlockElements is built from all inputs (buildElements). A pre-processing of the elements is done by the KDTreeAlgo (space partitioning algorithm, used for the most combinatorically expensive pairs) and KDTrees are built. Next, PF blocks are built (findBlocks) with running linkers as loops over the list of PFBlockElements and the pre-processed KDTrees. A re-linking step comes after (packLinks), which is done in order to check for extra links between elements. When all PFBlockElements have been processed and sorted into PF blocks, the algorithm stops. </p> <p>For further reference, Lindsey Gray (FNAL) presented updates for the PFBlockProducer in 2014 that were intergrated in the algorithm. The slides can be found here and here.</p>"}]}